{"ast":null,"code":"import _toConsumableArray from \"/Users/SXS4LFP/cart/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/SXS4LFP/cart/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport data from '../items.json';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_ORDER, SHOW_ORDERS } from '../actions/action-types/cart-actions';\nimport PouchDB from 'pouchdb-browser';\nvar db = new PouchDB('orders');\nvar remoteCouch = false;\n\nvar importedItems = require('../items.json'); //(with path)\n\n\ndb.changes({\n  since: 'now',\n  live: true\n}).on('change', showAllOrders);\n\nfunction addOrder(order) {\n  order._id = new Date().toISOString();\n  db.put(order, function callback(err, result) {\n    if (!err) {\n      console.log('Successfully posted an order!');\n    }\n  });\n}\n\nfunction showAllOrders() {\n  var x = db.allDocs({\n    include_docs: true,\n    attachments: true\n  }).then(function (result) {\n    // handle result\n    return result;\n  }).catch(function (err) {\n    console.log(err);\n  });\n  alert(X);\n}\n\nvar initState = {\n  items: importedItems.items,\n  orders: importedItems.orders,\n  addedItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //alert(initState.items[0].title)\n  //INSIDE HOME COMPONENT\n  if (action.type === ADD_TO_CART) {\n    var addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n    var existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var editedItems = state.items;\n    var idx = editedItems.indexOf(addedItem);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      editedItems[idx] = addedItem;\n      return _objectSpread({}, state, {\n        total: state.total + addedItem.price,\n        items: editedItems\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      var newTotal = state.total + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem.quantity += 1;\n\n    var _newTotal2 = state.total + _addedItem.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem2.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal3 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal3\n      });\n    } else {\n      _addedItem2.quantity -= 1;\n\n      var _newTotal4 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        total: _newTotal4\n      });\n    }\n  }\n\n  if (action.type === ADD_ORDER) {\n    var items = state.addedItems;\n    var newOrders = state.orders;\n    var newOrder = {\n      name: action.name,\n      items: items\n    };\n    addOrder(newOrder);\n    newOrders.push(newOrder);\n    return _objectSpread({}, state, {\n      orders: newOrders\n    });\n  }\n\n  if (action.type === SHOW_ORDERS) {\n    //alert(\"hi\")\n    var orders = showAllOrders();\n    setTimeout(alert(\"waited\"), 1000);\n    console.log(orders);\n    return orders;\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/SXS4LFP/cart/Shopping-Cart/src/components/reducers/cartReducer.js"],"names":["data","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_ORDER","SHOW_ORDERS","PouchDB","db","remoteCouch","importedItems","require","changes","since","live","on","showAllOrders","addOrder","order","_id","Date","toISOString","put","callback","err","result","console","log","x","allDocs","include_docs","attachments","then","catch","alert","X","initState","items","orders","addedItems","total","cartReducer","state","action","type","addedItem","find","item","id","existed_item","editedItems","idx","indexOf","quantity","price","newTotal","itemToRemove","new_items","filter","newOrders","newOrder","name","push","setTimeout"],"mappings":"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","sourcesContent":["\r\nimport data from '../items.json'\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY, ADD_ORDER, SHOW_ORDERS} from '../actions/action-types/cart-actions'\r\nimport PouchDB from 'pouchdb-browser'\r\n\r\n\r\nvar db = new PouchDB('orders');\r\nvar remoteCouch = false;\r\n\r\nvar importedItems = require('../items.json'); //(with path)\r\n\r\n\r\ndb.changes({\r\n  since: 'now',\r\n  live: true\r\n}).on('change', showAllOrders);\r\n\r\nfunction addOrder(order){\r\n  order._id  = new Date().toISOString()\r\n\r\n  db.put(order, function callback(err, result) {\r\n    if (!err) {\r\n      console.log('Successfully posted an order!');\r\n    }\r\n  });\r\n}\r\n\r\nfunction showAllOrders() {\r\n  var x = db.allDocs({\r\n    include_docs: true,\r\n    attachments: true\r\n  }).then(function (result) {\r\n    // handle result\r\n    return result\r\n  }).catch(function (err) {\r\n    console.log(err);\r\n  });\r\n  alert(X)\r\n}\r\n\r\n\r\n\r\nconst initState = {\r\n\r\n    items: importedItems.items,\r\n    orders: importedItems.orders,\r\n\r\n    addedItems:[],\r\n    total: 0\r\n\r\n}\r\nconst cartReducer= (state = initState,action)=>{\r\n  //alert(initState.items[0].title)\r\n\r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n    let existed_item = state.addedItems.find(item=> action.id === item.id)\r\n         var editedItems = state.items\r\n         var idx = editedItems.indexOf(addedItem)\r\n\r\n\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1\r\n\r\n            editedItems[idx] = addedItem\r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price,\r\n                 items: editedItems\r\n\r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price\r\n\r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1\r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if(action.type=== SUB_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if(action.type=== ADD_ORDER){\r\n\r\n      let items = state.addedItems\r\n      let newOrders = state.orders\r\n      let newOrder = {name: action.name, items: items}\r\n      addOrder(newOrder)\r\n      newOrders.push(newOrder)\r\n\r\n\r\n      return{\r\n          ...state,\r\n          orders: newOrders\r\n      }\r\n\r\n    }\r\n\r\n    if(action.type === SHOW_ORDERS){\r\n        //alert(\"hi\")\r\n        var orders = showAllOrders();\r\n        setTimeout(alert(\"waited\"), 1000);\r\n        console.log(orders)\r\n\r\n\r\n\r\n        return orders;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  else{\r\n    return state\r\n    }\r\n\r\n}\r\n\r\nexport default cartReducer\r\n"]},"metadata":{},"sourceType":"module"}