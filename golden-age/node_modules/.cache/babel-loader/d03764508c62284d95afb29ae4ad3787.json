{"ast":null,"code":"import _toConsumableArray from \"/Users/SXS4LFP/cart/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/SXS4LFP/cart/Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import Item1 from '../../images/item1.jpg'\n// import Item2 from '../../images/item2.jpg'\n// import Item3 from '../../images/item3.jpg'\n// import Item4 from '../../images/item4.jpg'\n// import Item5 from '../../images/item5.jpg'\n// import Item6 from '../../images/item6.jpg'\n// import Item7 from '../../images/item7.jpg'\n// import Item8 from '../../images/item8.jpg'\n// import Item9 from '../../images/item9.jpg'\nimport data from '../items.json';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY } from '../actions/action-types/cart-actions'; //var x = JSON.parse(\"../items.json\");\n\nvar importedItems = require('../items.json'); //(with path)\n\n\nvar initState = {\n  items: importedItems,\n  addedItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //alert(initState.items[0].title)\n  //INSIDE HOME COMPONENT\n  if (action.type === ADD_TO_CART) {\n    var addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n    var existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    }); // var editedAddedItems = state.addedItems\n    // var idx = editedAddedItems.indexOf(existed_item)\n    // editedItems.splice(idx, 1)\n\n    if (existed_item) {\n      addedItem.quantity += 1; // editedAddedItems.push(addedItem)\n\n      return _objectSpread({}, state, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      var newTotal = state.total + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem.quantity += 1;\n\n    var _newTotal2 = state.total + _addedItem.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem2.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal3 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal3\n      });\n    } else {\n      _addedItem2.quantity -= 1;\n\n      var _newTotal4 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        total: _newTotal4\n      });\n    }\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/SXS4LFP/cart/Shopping-Cart/src/components/reducers/cartReducer.js"],"names":["data","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","importedItems","require","initState","items","addedItems","total","cartReducer","state","action","type","addedItem","find","item","id","existed_item","quantity","price","newTotal","itemToRemove","new_items","filter","console","log"],"mappings":"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","sourcesContent":["// import Item1 from '../../images/item1.jpg'\r\n// import Item2 from '../../images/item2.jpg'\r\n// import Item3 from '../../images/item3.jpg'\r\n// import Item4 from '../../images/item4.jpg'\r\n// import Item5 from '../../images/item5.jpg'\r\n// import Item6 from '../../images/item6.jpg'\r\n// import Item7 from '../../images/item7.jpg'\r\n// import Item8 from '../../images/item8.jpg'\r\n// import Item9 from '../../images/item9.jpg'\r\nimport data from '../items.json'\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY} from '../actions/action-types/cart-actions'\r\n\r\n//var x = JSON.parse(\"../items.json\");\r\nvar importedItems = require('../items.json'); //(with path)\r\nconst initState = {\r\n\r\n    items: importedItems,\r\n\r\n    addedItems:[],\r\n    total: 0\r\n\r\n}\r\nconst cartReducer= (state = initState,action)=>{\r\n  //alert(initState.items[0].title)\r\n\r\n    //INSIDE HOME COMPONENT\r\n    if(action.type === ADD_TO_CART){\r\n\r\n          let addedItem = state.items.find(item=> item.id === action.id)\r\n          //check if the action id exists in the addedItems\r\n    let existed_item = state.addedItems.find(item=> action.id === item.id)\r\n         // var editedAddedItems = state.addedItems\r\n         // var idx = editedAddedItems.indexOf(existed_item)\r\n         // editedItems.splice(idx, 1)\r\n\r\n         if(existed_item)\r\n         {\r\n            addedItem.quantity += 1\r\n            // editedAddedItems.push(addedItem)\r\n             return{\r\n                ...state,\r\n                 total: state.total + addedItem.price\r\n\r\n\r\n\r\n\r\n                  }\r\n        }\r\n         else{\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price\r\n\r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1\r\n          let newTotal = state.total + addedItem.price\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  else{\r\n    return state\r\n    }\r\n\r\n}\r\n\r\nexport default cartReducer\r\n"]},"metadata":{},"sourceType":"module"}